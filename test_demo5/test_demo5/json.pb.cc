// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: json.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "json.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Test {

namespace {

const ::google::protobuf::Descriptor* Header_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Header_reflection_ = NULL;
const ::google::protobuf::Descriptor* Body_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Body_reflection_ = NULL;
const ::google::protobuf::Descriptor* End_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  End_reflection_ = NULL;
const ::google::protobuf::Descriptor* Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Data_reflection_ = NULL;
const ::google::protobuf::Descriptor* Json_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Json_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_json_2eproto() {
  protobuf_AddDesc_json_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "json.proto");
  GOOGLE_CHECK(file != NULL);
  Header_descriptor_ = file->message_type(0);
  static const int Header_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, biilid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, deptid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, headid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, isinlay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, houseid_),
  };
  Header_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Header_descriptor_,
      Header::default_instance_,
      Header_offsets_,
      -1,
      -1,
      -1,
      sizeof(Header),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, _is_default_instance_));
  Body_descriptor_ = file->message_type(1);
  static const int Body_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Body, barcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Body, cate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Body, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Body, matact_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Body, bodyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Body, headid_),
  };
  Body_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Body_descriptor_,
      Body::default_instance_,
      Body_offsets_,
      -1,
      -1,
      -1,
      sizeof(Body),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Body, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Body, _is_default_instance_));
  End_descriptor_ = file->message_type(2);
  static const int End_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(End, fittingid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(End, bodyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(End, rownum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(End, code_),
  };
  End_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      End_descriptor_,
      End::default_instance_,
      End_offsets_,
      -1,
      -1,
      -1,
      sizeof(End),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(End, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(End, _is_default_instance_));
  Data_descriptor_ = file->message_type(3);
  static const int Data_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, end_),
  };
  Data_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Data_descriptor_,
      Data::default_instance_,
      Data_offsets_,
      -1,
      -1,
      -1,
      sizeof(Data),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _is_default_instance_));
  Json_descriptor_ = file->message_type(4);
  static const int Json_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Json, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Json, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Json, data_),
  };
  Json_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Json_descriptor_,
      Json::default_instance_,
      Json_offsets_,
      -1,
      -1,
      -1,
      sizeof(Json),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Json, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Json, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_json_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Header_descriptor_, &Header::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Body_descriptor_, &Body::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      End_descriptor_, &End::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Data_descriptor_, &Data::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Json_descriptor_, &Json::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_json_2eproto() {
  delete Header::default_instance_;
  delete Header_reflection_;
  delete Body::default_instance_;
  delete Body_reflection_;
  delete End::default_instance_;
  delete End_reflection_;
  delete Data::default_instance_;
  delete Data_reflection_;
  delete Json::default_instance_;
  delete Json_reflection_;
}

void protobuf_AddDesc_json_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\njson.proto\022\004Test\"v\n\006Header\022\016\n\006biilId\030\007"
    " \001(\004\022\014\n\004code\030\001 \001(\004\022\016\n\006deptId\030\002 \001(\004\022\016\n\006He"
    "adId\030\003 \001(\004\022\017\n\007isInlay\030\004 \001(\010\022\014\n\004time\030\005 \001("
    "\t\022\017\n\007houseId\030\006 \001(\004\"e\n\004Body\022\017\n\007barcode\030\006 "
    "\001(\t\022\014\n\004cate\030\001 \001(\t\022\016\n\006amount\030\002 \001(\001\022\016\n\006mat"
    "act\030\003 \001(\001\022\016\n\006bodyId\030\004 \001(\004\022\016\n\006headId\030\005 \001("
    "\004\"F\n\003End\022\021\n\tfittingId\030\004 \001(\004\022\016\n\006bodyId\030\001 "
    "\001(\004\022\016\n\006rownum\030\002 \001(\005\022\014\n\004code\030\003 \001(\t\"V\n\004Dat"
    "a\022\034\n\006header\030\003 \001(\0132\014.Test.Header\022\030\n\004body\030"
    "\001 \003(\0132\n.Test.Body\022\026\n\003end\030\002 \003(\0132\t.Test.En"
    "d\";\n\004Json\022\014\n\004code\030\003 \001(\005\022\013\n\003Msg\030\001 \001(\t\022\030\n\004"
    "data\030\002 \001(\0132\n.Test.Datab\006proto3", 470);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "json.proto", &protobuf_RegisterTypes);
  Header::default_instance_ = new Header();
  Body::default_instance_ = new Body();
  End::default_instance_ = new End();
  Data::default_instance_ = new Data();
  Json::default_instance_ = new Json();
  Header::default_instance_->InitAsDefaultInstance();
  Body::default_instance_->InitAsDefaultInstance();
  End::default_instance_->InitAsDefaultInstance();
  Data::default_instance_->InitAsDefaultInstance();
  Json::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_json_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_json_2eproto {
  StaticDescriptorInitializer_json_2eproto() {
    protobuf_AddDesc_json_2eproto();
  }
} static_descriptor_initializer_json_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int Header::kBiilIdFieldNumber;
const int Header::kCodeFieldNumber;
const int Header::kDeptIdFieldNumber;
const int Header::kHeadIdFieldNumber;
const int Header::kIsInlayFieldNumber;
const int Header::kTimeFieldNumber;
const int Header::kHouseIdFieldNumber;
#endif  // !_MSC_VER

Header::Header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test.Header)
}

void Header::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Header::Header(const Header& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Test.Header)
}

void Header::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  biilid_ = GOOGLE_ULONGLONG(0);
  code_ = GOOGLE_ULONGLONG(0);
  deptid_ = GOOGLE_ULONGLONG(0);
  headid_ = GOOGLE_ULONGLONG(0);
  isinlay_ = false;
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  houseid_ = GOOGLE_ULONGLONG(0);
}

Header::~Header() {
  // @@protoc_insertion_point(destructor:Test.Header)
  SharedDtor();
}

void Header::SharedDtor() {
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Header::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Header::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Header_descriptor_;
}

const Header& Header::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_json_2eproto();
  return *default_instance_;
}

Header* Header::default_instance_ = NULL;

Header* Header::New(::google::protobuf::Arena* arena) const {
  Header* n = new Header;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Header::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Header*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(biilid_, headid_);
  ZR_(houseid_, isinlay_);
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test.Header)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &code_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_deptId;
        break;
      }

      // optional uint64 deptId = 2;
      case 2: {
        if (tag == 16) {
         parse_deptId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deptid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_HeadId;
        break;
      }

      // optional uint64 HeadId = 3;
      case 3: {
        if (tag == 24) {
         parse_HeadId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &headid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_isInlay;
        break;
      }

      // optional bool isInlay = 4;
      case 4: {
        if (tag == 32) {
         parse_isInlay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isinlay_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_time;
        break;
      }

      // optional string time = 5;
      case 5: {
        if (tag == 42) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Test.Header.time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_houseId;
        break;
      }

      // optional uint64 houseId = 6;
      case 6: {
        if (tag == 48) {
         parse_houseId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &houseid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_biilId;
        break;
      }

      // optional uint64 biilId = 7;
      case 7: {
        if (tag == 56) {
         parse_biilId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &biilid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Test.Header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test.Header)
  return false;
#undef DO_
}

void Header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test.Header)
  // optional uint64 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->code(), output);
  }

  // optional uint64 deptId = 2;
  if (this->deptid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->deptid(), output);
  }

  // optional uint64 HeadId = 3;
  if (this->headid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->headid(), output);
  }

  // optional bool isInlay = 4;
  if (this->isinlay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isinlay(), output);
  }

  // optional string time = 5;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Test.Header.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->time(), output);
  }

  // optional uint64 houseId = 6;
  if (this->houseid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->houseid(), output);
  }

  // optional uint64 biilId = 7;
  if (this->biilid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->biilid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Test.Header)
}

::google::protobuf::uint8* Header::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Test.Header)
  // optional uint64 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->code(), target);
  }

  // optional uint64 deptId = 2;
  if (this->deptid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->deptid(), target);
  }

  // optional uint64 HeadId = 3;
  if (this->headid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->headid(), target);
  }

  // optional bool isInlay = 4;
  if (this->isinlay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isinlay(), target);
  }

  // optional string time = 5;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Test.Header.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->time(), target);
  }

  // optional uint64 houseId = 6;
  if (this->houseid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->houseid(), target);
  }

  // optional uint64 biilId = 7;
  if (this->biilid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->biilid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Test.Header)
  return target;
}

int Header::ByteSize() const {
  int total_size = 0;

  // optional uint64 biilId = 7;
  if (this->biilid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->biilid());
  }

  // optional uint64 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->code());
  }

  // optional uint64 deptId = 2;
  if (this->deptid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->deptid());
  }

  // optional uint64 HeadId = 3;
  if (this->headid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->headid());
  }

  // optional bool isInlay = 4;
  if (this->isinlay() != 0) {
    total_size += 1 + 1;
  }

  // optional string time = 5;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  // optional uint64 houseId = 6;
  if (this->houseid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->houseid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Header::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Header* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Header>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Header::MergeFrom(const Header& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.biilid() != 0) {
    set_biilid(from.biilid());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.deptid() != 0) {
    set_deptid(from.deptid());
  }
  if (from.headid() != 0) {
    set_headid(from.headid());
  }
  if (from.isinlay() != 0) {
    set_isinlay(from.isinlay());
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  if (from.houseid() != 0) {
    set_houseid(from.houseid());
  }
}

void Header::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Header::CopyFrom(const Header& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Header::IsInitialized() const {

  return true;
}

void Header::Swap(Header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Header::InternalSwap(Header* other) {
  std::swap(biilid_, other->biilid_);
  std::swap(code_, other->code_);
  std::swap(deptid_, other->deptid_);
  std::swap(headid_, other->headid_);
  std::swap(isinlay_, other->isinlay_);
  time_.Swap(&other->time_);
  std::swap(houseid_, other->houseid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Header::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Header_descriptor_;
  metadata.reflection = Header_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Header

// optional uint64 biilId = 7;
void Header::clear_biilid() {
  biilid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Header::biilid() const {
  // @@protoc_insertion_point(field_get:Test.Header.biilId)
  return biilid_;
}
 void Header::set_biilid(::google::protobuf::uint64 value) {
  
  biilid_ = value;
  // @@protoc_insertion_point(field_set:Test.Header.biilId)
}

// optional uint64 code = 1;
void Header::clear_code() {
  code_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Header::code() const {
  // @@protoc_insertion_point(field_get:Test.Header.code)
  return code_;
}
 void Header::set_code(::google::protobuf::uint64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:Test.Header.code)
}

// optional uint64 deptId = 2;
void Header::clear_deptid() {
  deptid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Header::deptid() const {
  // @@protoc_insertion_point(field_get:Test.Header.deptId)
  return deptid_;
}
 void Header::set_deptid(::google::protobuf::uint64 value) {
  
  deptid_ = value;
  // @@protoc_insertion_point(field_set:Test.Header.deptId)
}

// optional uint64 HeadId = 3;
void Header::clear_headid() {
  headid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Header::headid() const {
  // @@protoc_insertion_point(field_get:Test.Header.HeadId)
  return headid_;
}
 void Header::set_headid(::google::protobuf::uint64 value) {
  
  headid_ = value;
  // @@protoc_insertion_point(field_set:Test.Header.HeadId)
}

// optional bool isInlay = 4;
void Header::clear_isinlay() {
  isinlay_ = false;
}
 bool Header::isinlay() const {
  // @@protoc_insertion_point(field_get:Test.Header.isInlay)
  return isinlay_;
}
 void Header::set_isinlay(bool value) {
  
  isinlay_ = value;
  // @@protoc_insertion_point(field_set:Test.Header.isInlay)
}

// optional string time = 5;
void Header::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Header::time() const {
  // @@protoc_insertion_point(field_get:Test.Header.time)
  return time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Header::set_time(const ::std::string& value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Test.Header.time)
}
 void Header::set_time(const char* value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Test.Header.time)
}
 void Header::set_time(const char* value, size_t size) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Test.Header.time)
}
 ::std::string* Header::mutable_time() {
  
  // @@protoc_insertion_point(field_mutable:Test.Header.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Header::release_time() {
  
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Header::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    
  } else {
    
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:Test.Header.time)
}

// optional uint64 houseId = 6;
void Header::clear_houseid() {
  houseid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Header::houseid() const {
  // @@protoc_insertion_point(field_get:Test.Header.houseId)
  return houseid_;
}
 void Header::set_houseid(::google::protobuf::uint64 value) {
  
  houseid_ = value;
  // @@protoc_insertion_point(field_set:Test.Header.houseId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Body::kBarcodeFieldNumber;
const int Body::kCateFieldNumber;
const int Body::kAmountFieldNumber;
const int Body::kMatactFieldNumber;
const int Body::kBodyIdFieldNumber;
const int Body::kHeadIdFieldNumber;
#endif  // !_MSC_VER

Body::Body()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test.Body)
}

void Body::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Body::Body(const Body& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Test.Body)
}

void Body::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  barcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = 0;
  matact_ = 0;
  bodyid_ = GOOGLE_ULONGLONG(0);
  headid_ = GOOGLE_ULONGLONG(0);
}

Body::~Body() {
  // @@protoc_insertion_point(destructor:Test.Body)
  SharedDtor();
}

void Body::SharedDtor() {
  barcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Body::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Body::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Body_descriptor_;
}

const Body& Body::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_json_2eproto();
  return *default_instance_;
}

Body* Body::default_instance_ = NULL;

Body* Body::New(::google::protobuf::Arena* arena) const {
  Body* n = new Body;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Body::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Body*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(amount_, headid_);
  barcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Body::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test.Body)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string cate = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cate().data(), this->cate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Test.Body.cate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_amount;
        break;
      }

      // optional double amount = 2;
      case 2: {
        if (tag == 17) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &amount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_matact;
        break;
      }

      // optional double matact = 3;
      case 3: {
        if (tag == 25) {
         parse_matact:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &matact_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bodyId;
        break;
      }

      // optional uint64 bodyId = 4;
      case 4: {
        if (tag == 32) {
         parse_bodyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bodyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_headId;
        break;
      }

      // optional uint64 headId = 5;
      case 5: {
        if (tag == 40) {
         parse_headId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &headid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_barcode;
        break;
      }

      // optional string barcode = 6;
      case 6: {
        if (tag == 50) {
         parse_barcode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_barcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->barcode().data(), this->barcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Test.Body.barcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Test.Body)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test.Body)
  return false;
#undef DO_
}

void Body::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test.Body)
  // optional string cate = 1;
  if (this->cate().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cate().data(), this->cate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Test.Body.cate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cate(), output);
  }

  // optional double amount = 2;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->amount(), output);
  }

  // optional double matact = 3;
  if (this->matact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->matact(), output);
  }

  // optional uint64 bodyId = 4;
  if (this->bodyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bodyid(), output);
  }

  // optional uint64 headId = 5;
  if (this->headid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->headid(), output);
  }

  // optional string barcode = 6;
  if (this->barcode().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->barcode().data(), this->barcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Test.Body.barcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->barcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:Test.Body)
}

::google::protobuf::uint8* Body::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Test.Body)
  // optional string cate = 1;
  if (this->cate().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cate().data(), this->cate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Test.Body.cate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cate(), target);
  }

  // optional double amount = 2;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->amount(), target);
  }

  // optional double matact = 3;
  if (this->matact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->matact(), target);
  }

  // optional uint64 bodyId = 4;
  if (this->bodyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bodyid(), target);
  }

  // optional uint64 headId = 5;
  if (this->headid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->headid(), target);
  }

  // optional string barcode = 6;
  if (this->barcode().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->barcode().data(), this->barcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Test.Body.barcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->barcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Test.Body)
  return target;
}

int Body::ByteSize() const {
  int total_size = 0;

  // optional string barcode = 6;
  if (this->barcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->barcode());
  }

  // optional string cate = 1;
  if (this->cate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cate());
  }

  // optional double amount = 2;
  if (this->amount() != 0) {
    total_size += 1 + 8;
  }

  // optional double matact = 3;
  if (this->matact() != 0) {
    total_size += 1 + 8;
  }

  // optional uint64 bodyId = 4;
  if (this->bodyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bodyid());
  }

  // optional uint64 headId = 5;
  if (this->headid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->headid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Body::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Body* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Body>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Body::MergeFrom(const Body& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.barcode().size() > 0) {

    barcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.barcode_);
  }
  if (from.cate().size() > 0) {

    cate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cate_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.matact() != 0) {
    set_matact(from.matact());
  }
  if (from.bodyid() != 0) {
    set_bodyid(from.bodyid());
  }
  if (from.headid() != 0) {
    set_headid(from.headid());
  }
}

void Body::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Body::CopyFrom(const Body& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Body::IsInitialized() const {

  return true;
}

void Body::Swap(Body* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Body::InternalSwap(Body* other) {
  barcode_.Swap(&other->barcode_);
  cate_.Swap(&other->cate_);
  std::swap(amount_, other->amount_);
  std::swap(matact_, other->matact_);
  std::swap(bodyid_, other->bodyid_);
  std::swap(headid_, other->headid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Body::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Body_descriptor_;
  metadata.reflection = Body_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Body

// optional string barcode = 6;
void Body::clear_barcode() {
  barcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Body::barcode() const {
  // @@protoc_insertion_point(field_get:Test.Body.barcode)
  return barcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Body::set_barcode(const ::std::string& value) {
  
  barcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Test.Body.barcode)
}
 void Body::set_barcode(const char* value) {
  
  barcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Test.Body.barcode)
}
 void Body::set_barcode(const char* value, size_t size) {
  
  barcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Test.Body.barcode)
}
 ::std::string* Body::mutable_barcode() {
  
  // @@protoc_insertion_point(field_mutable:Test.Body.barcode)
  return barcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Body::release_barcode() {
  
  return barcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Body::set_allocated_barcode(::std::string* barcode) {
  if (barcode != NULL) {
    
  } else {
    
  }
  barcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), barcode);
  // @@protoc_insertion_point(field_set_allocated:Test.Body.barcode)
}

// optional string cate = 1;
void Body::clear_cate() {
  cate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Body::cate() const {
  // @@protoc_insertion_point(field_get:Test.Body.cate)
  return cate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Body::set_cate(const ::std::string& value) {
  
  cate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Test.Body.cate)
}
 void Body::set_cate(const char* value) {
  
  cate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Test.Body.cate)
}
 void Body::set_cate(const char* value, size_t size) {
  
  cate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Test.Body.cate)
}
 ::std::string* Body::mutable_cate() {
  
  // @@protoc_insertion_point(field_mutable:Test.Body.cate)
  return cate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Body::release_cate() {
  
  return cate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Body::set_allocated_cate(::std::string* cate) {
  if (cate != NULL) {
    
  } else {
    
  }
  cate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cate);
  // @@protoc_insertion_point(field_set_allocated:Test.Body.cate)
}

// optional double amount = 2;
void Body::clear_amount() {
  amount_ = 0;
}
 double Body::amount() const {
  // @@protoc_insertion_point(field_get:Test.Body.amount)
  return amount_;
}
 void Body::set_amount(double value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:Test.Body.amount)
}

// optional double matact = 3;
void Body::clear_matact() {
  matact_ = 0;
}
 double Body::matact() const {
  // @@protoc_insertion_point(field_get:Test.Body.matact)
  return matact_;
}
 void Body::set_matact(double value) {
  
  matact_ = value;
  // @@protoc_insertion_point(field_set:Test.Body.matact)
}

// optional uint64 bodyId = 4;
void Body::clear_bodyid() {
  bodyid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Body::bodyid() const {
  // @@protoc_insertion_point(field_get:Test.Body.bodyId)
  return bodyid_;
}
 void Body::set_bodyid(::google::protobuf::uint64 value) {
  
  bodyid_ = value;
  // @@protoc_insertion_point(field_set:Test.Body.bodyId)
}

// optional uint64 headId = 5;
void Body::clear_headid() {
  headid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Body::headid() const {
  // @@protoc_insertion_point(field_get:Test.Body.headId)
  return headid_;
}
 void Body::set_headid(::google::protobuf::uint64 value) {
  
  headid_ = value;
  // @@protoc_insertion_point(field_set:Test.Body.headId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int End::kFittingIdFieldNumber;
const int End::kBodyIdFieldNumber;
const int End::kRownumFieldNumber;
const int End::kCodeFieldNumber;
#endif  // !_MSC_VER

End::End()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test.End)
}

void End::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

End::End(const End& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Test.End)
}

void End::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  fittingid_ = GOOGLE_ULONGLONG(0);
  bodyid_ = GOOGLE_ULONGLONG(0);
  rownum_ = 0;
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

End::~End() {
  // @@protoc_insertion_point(destructor:Test.End)
  SharedDtor();
}

void End::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void End::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* End::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return End_descriptor_;
}

const End& End::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_json_2eproto();
  return *default_instance_;
}

End* End::default_instance_ = NULL;

End* End::New(::google::protobuf::Arena* arena) const {
  End* n = new End;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void End::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<End*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(fittingid_, bodyid_);
  rownum_ = 0;
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool End::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test.End)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 bodyId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bodyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rownum;
        break;
      }

      // optional int32 rownum = 2;
      case 2: {
        if (tag == 16) {
         parse_rownum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rownum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_code;
        break;
      }

      // optional string code = 3;
      case 3: {
        if (tag == 26) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Test.End.code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_fittingId;
        break;
      }

      // optional uint64 fittingId = 4;
      case 4: {
        if (tag == 32) {
         parse_fittingId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fittingid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Test.End)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test.End)
  return false;
#undef DO_
}

void End::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test.End)
  // optional uint64 bodyId = 1;
  if (this->bodyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->bodyid(), output);
  }

  // optional int32 rownum = 2;
  if (this->rownum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rownum(), output);
  }

  // optional string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Test.End.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  // optional uint64 fittingId = 4;
  if (this->fittingid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->fittingid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Test.End)
}

::google::protobuf::uint8* End::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Test.End)
  // optional uint64 bodyId = 1;
  if (this->bodyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->bodyid(), target);
  }

  // optional int32 rownum = 2;
  if (this->rownum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rownum(), target);
  }

  // optional string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Test.End.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  // optional uint64 fittingId = 4;
  if (this->fittingid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->fittingid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Test.End)
  return target;
}

int End::ByteSize() const {
  int total_size = 0;

  // optional uint64 fittingId = 4;
  if (this->fittingid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fittingid());
  }

  // optional uint64 bodyId = 1;
  if (this->bodyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bodyid());
  }

  // optional int32 rownum = 2;
  if (this->rownum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rownum());
  }

  // optional string code = 3;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void End::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const End* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const End>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void End::MergeFrom(const End& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.fittingid() != 0) {
    set_fittingid(from.fittingid());
  }
  if (from.bodyid() != 0) {
    set_bodyid(from.bodyid());
  }
  if (from.rownum() != 0) {
    set_rownum(from.rownum());
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
}

void End::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void End::CopyFrom(const End& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool End::IsInitialized() const {

  return true;
}

void End::Swap(End* other) {
  if (other == this) return;
  InternalSwap(other);
}
void End::InternalSwap(End* other) {
  std::swap(fittingid_, other->fittingid_);
  std::swap(bodyid_, other->bodyid_);
  std::swap(rownum_, other->rownum_);
  code_.Swap(&other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata End::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = End_descriptor_;
  metadata.reflection = End_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// End

// optional uint64 fittingId = 4;
void End::clear_fittingid() {
  fittingid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 End::fittingid() const {
  // @@protoc_insertion_point(field_get:Test.End.fittingId)
  return fittingid_;
}
 void End::set_fittingid(::google::protobuf::uint64 value) {
  
  fittingid_ = value;
  // @@protoc_insertion_point(field_set:Test.End.fittingId)
}

// optional uint64 bodyId = 1;
void End::clear_bodyid() {
  bodyid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 End::bodyid() const {
  // @@protoc_insertion_point(field_get:Test.End.bodyId)
  return bodyid_;
}
 void End::set_bodyid(::google::protobuf::uint64 value) {
  
  bodyid_ = value;
  // @@protoc_insertion_point(field_set:Test.End.bodyId)
}

// optional int32 rownum = 2;
void End::clear_rownum() {
  rownum_ = 0;
}
 ::google::protobuf::int32 End::rownum() const {
  // @@protoc_insertion_point(field_get:Test.End.rownum)
  return rownum_;
}
 void End::set_rownum(::google::protobuf::int32 value) {
  
  rownum_ = value;
  // @@protoc_insertion_point(field_set:Test.End.rownum)
}

// optional string code = 3;
void End::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& End::code() const {
  // @@protoc_insertion_point(field_get:Test.End.code)
  return code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void End::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Test.End.code)
}
 void End::set_code(const char* value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Test.End.code)
}
 void End::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Test.End.code)
}
 ::std::string* End::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:Test.End.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* End::release_code() {
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void End::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:Test.End.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Data::kHeaderFieldNumber;
const int Data::kBodyFieldNumber;
const int Data::kEndFieldNumber;
#endif  // !_MSC_VER

Data::Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test.Data)
}

void Data::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Test::Header*>(&::Test::Header::default_instance());
}

Data::Data(const Data& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Test.Data)
}

void Data::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:Test.Data)
  SharedDtor();
}

void Data::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Data_descriptor_;
}

const Data& Data::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_json_2eproto();
  return *default_instance_;
}

Data* Data::default_instance_ = NULL;

Data* Data::New(::google::protobuf::Arena* arena) const {
  Data* n = new Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Data::Clear() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  body_.Clear();
  end_.Clear();
}

bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test.Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Test.Body body = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_body()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_body;
        if (input->ExpectTag(18)) goto parse_loop_end;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Test.End end = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_end:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_end()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_end;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_header;
        break;
      }

      // optional .Test.Header header = 3;
      case 3: {
        if (tag == 26) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Test.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test.Data)
  return false;
#undef DO_
}

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test.Data)
  // repeated .Test.Body body = 1;
  for (unsigned int i = 0, n = this->body_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->body(i), output);
  }

  // repeated .Test.End end = 2;
  for (unsigned int i = 0, n = this->end_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->end(i), output);
  }

  // optional .Test.Header header = 3;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:Test.Data)
}

::google::protobuf::uint8* Data::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Test.Data)
  // repeated .Test.Body body = 1;
  for (unsigned int i = 0, n = this->body_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->body(i), target);
  }

  // repeated .Test.End end = 2;
  for (unsigned int i = 0, n = this->end_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->end(i), target);
  }

  // optional .Test.Header header = 3;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->header_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Test.Data)
  return target;
}

int Data::ByteSize() const {
  int total_size = 0;

  // optional .Test.Header header = 3;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Test.Body body = 1;
  total_size += 1 * this->body_size();
  for (int i = 0; i < this->body_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->body(i));
  }

  // repeated .Test.End end = 2;
  total_size += 1 * this->end_size();
  for (int i = 0; i < this->end_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->end(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Data::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Data* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Data>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  body_.MergeFrom(from.body_);
  end_.MergeFrom(from.end_);
  if (from.has_header()) {
    mutable_header()->::Test::Header::MergeFrom(from.header());
  }
}

void Data::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {

  return true;
}

void Data::Swap(Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Data::InternalSwap(Data* other) {
  std::swap(header_, other->header_);
  body_.UnsafeArenaSwap(&other->body_);
  end_.UnsafeArenaSwap(&other->end_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Data_descriptor_;
  metadata.reflection = Data_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Data

// optional .Test.Header header = 3;
bool Data::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void Data::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
 const ::Test::Header& Data::header() const {
  // @@protoc_insertion_point(field_get:Test.Data.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
 ::Test::Header* Data::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Test::Header;
  }
  // @@protoc_insertion_point(field_mutable:Test.Data.header)
  return header_;
}
 ::Test::Header* Data::release_header() {
  
  ::Test::Header* temp = header_;
  header_ = NULL;
  return temp;
}
 void Data::set_allocated_header(::Test::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Test.Data.header)
}

// repeated .Test.Body body = 1;
int Data::body_size() const {
  return body_.size();
}
void Data::clear_body() {
  body_.Clear();
}
 const ::Test::Body& Data::body(int index) const {
  // @@protoc_insertion_point(field_get:Test.Data.body)
  return body_.Get(index);
}
 ::Test::Body* Data::mutable_body(int index) {
  // @@protoc_insertion_point(field_mutable:Test.Data.body)
  return body_.Mutable(index);
}
 ::Test::Body* Data::add_body() {
  // @@protoc_insertion_point(field_add:Test.Data.body)
  return body_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::Test::Body >&
Data::body() const {
  // @@protoc_insertion_point(field_list:Test.Data.body)
  return body_;
}
 ::google::protobuf::RepeatedPtrField< ::Test::Body >*
Data::mutable_body() {
  // @@protoc_insertion_point(field_mutable_list:Test.Data.body)
  return &body_;
}

// repeated .Test.End end = 2;
int Data::end_size() const {
  return end_.size();
}
void Data::clear_end() {
  end_.Clear();
}
 const ::Test::End& Data::end(int index) const {
  // @@protoc_insertion_point(field_get:Test.Data.end)
  return end_.Get(index);
}
 ::Test::End* Data::mutable_end(int index) {
  // @@protoc_insertion_point(field_mutable:Test.Data.end)
  return end_.Mutable(index);
}
 ::Test::End* Data::add_end() {
  // @@protoc_insertion_point(field_add:Test.Data.end)
  return end_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::Test::End >&
Data::end() const {
  // @@protoc_insertion_point(field_list:Test.Data.end)
  return end_;
}
 ::google::protobuf::RepeatedPtrField< ::Test::End >*
Data::mutable_end() {
  // @@protoc_insertion_point(field_mutable_list:Test.Data.end)
  return &end_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Json::kCodeFieldNumber;
const int Json::kMsgFieldNumber;
const int Json::kDataFieldNumber;
#endif  // !_MSC_VER

Json::Json()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test.Json)
}

void Json::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::Test::Data*>(&::Test::Data::default_instance());
}

Json::Json(const Json& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Test.Json)
}

void Json::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  code_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
}

Json::~Json() {
  // @@protoc_insertion_point(destructor:Test.Json)
  SharedDtor();
}

void Json::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void Json::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Json::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Json_descriptor_;
}

const Json& Json::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_json_2eproto();
  return *default_instance_;
}

Json* Json::default_instance_ = NULL;

Json* Json::New(::google::protobuf::Arena* arena) const {
  Json* n = new Json;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Json::Clear() {
  code_ = 0;
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}

bool Json::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test.Json)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Test.Json.Msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .Test.Data data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_code;
        break;
      }

      // optional int32 code = 3;
      case 3: {
        if (tag == 24) {
         parse_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Test.Json)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test.Json)
  return false;
#undef DO_
}

void Json::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test.Json)
  // optional string Msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Test.Json.Msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // optional .Test.Data data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  // optional int32 code = 3;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->code(), output);
  }

  // @@protoc_insertion_point(serialize_end:Test.Json)
}

::google::protobuf::uint8* Json::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Test.Json)
  // optional string Msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Test.Json.Msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // optional .Test.Data data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->data_, target);
  }

  // optional int32 code = 3;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Test.Json)
  return target;
}

int Json::ByteSize() const {
  int total_size = 0;

  // optional int32 code = 3;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // optional string Msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // optional .Test.Data data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Json::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Json* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Json>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Json::MergeFrom(const Json& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_data()) {
    mutable_data()->::Test::Data::MergeFrom(from.data());
  }
}

void Json::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Json::CopyFrom(const Json& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Json::IsInitialized() const {

  return true;
}

void Json::Swap(Json* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Json::InternalSwap(Json* other) {
  std::swap(code_, other->code_);
  msg_.Swap(&other->msg_);
  std::swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Json::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Json_descriptor_;
  metadata.reflection = Json_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Json

// optional int32 code = 3;
void Json::clear_code() {
  code_ = 0;
}
 ::google::protobuf::int32 Json::code() const {
  // @@protoc_insertion_point(field_get:Test.Json.code)
  return code_;
}
 void Json::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:Test.Json.code)
}

// optional string Msg = 1;
void Json::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Json::msg() const {
  // @@protoc_insertion_point(field_get:Test.Json.Msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Json::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Test.Json.Msg)
}
 void Json::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Test.Json.Msg)
}
 void Json::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Test.Json.Msg)
}
 ::std::string* Json::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:Test.Json.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Json::release_msg() {
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Json::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:Test.Json.Msg)
}

// optional .Test.Data data = 2;
bool Json::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void Json::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
 const ::Test::Data& Json::data() const {
  // @@protoc_insertion_point(field_get:Test.Json.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
 ::Test::Data* Json::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::Test::Data;
  }
  // @@protoc_insertion_point(field_mutable:Test.Json.data)
  return data_;
}
 ::Test::Data* Json::release_data() {
  
  ::Test::Data* temp = data_;
  data_ = NULL;
  return temp;
}
 void Json::set_allocated_data(::Test::Data* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Test.Json.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Test

// @@protoc_insertion_point(global_scope)
